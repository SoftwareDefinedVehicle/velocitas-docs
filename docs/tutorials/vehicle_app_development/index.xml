<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vehicle App Development on Velocitas</title>
    <link>/velocitas/docs/tutorials/vehicle_app_development/</link>
    <description>Recent content in Vehicle App Development on Velocitas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Feb 2025 12:03:02 +0000</lastBuildDate>
    <atom:link href="/velocitas/docs/tutorials/vehicle_app_development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Vehicle App Development</title>
      <link>/velocitas/docs/tutorials/vehicle_app_development/python_development/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      <guid>/velocitas/docs/tutorials/vehicle_app_development/python_development/</guid>
      <description>We recommend that you make yourself familiar with the Vehicle App SDK first, before going through this tutorial.&#xA;The following information describes how to develop and test the sample Vehicle App that is included in the Python template repository . You will learn how to use the Vehicle App Python SDK and how to interact with the Vehicle Model.&#xA;Once you have completed all steps, you will have a solid understanding of the development workflow and you will be able to reuse the template repository for your own Vehicle App development project.</description>
    </item>
    <item>
      <title>C&#43;&#43; Vehicle App Development</title>
      <link>/velocitas/docs/tutorials/vehicle_app_development/cpp_development/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      <guid>/velocitas/docs/tutorials/vehicle_app_development/cpp_development/</guid>
      <description>We recommend that you make yourself familiar with the Vehicle App SDK first, before going through this tutorial.&#xA;The following information describes how to develop and test the sample Vehicle App that is included in the C++ template repository . You will learn how to use the Vehicle App C++ SDK and how to interact with the Vehicle Model.&#xA;Once you have completed all steps, you will have a solid understanding of the development workflow and you will be able to reuse the template repository for your own Vehicle App development project.</description>
    </item>
    <item>
      <title>Vehicle App Integration Testing</title>
      <link>/velocitas/docs/tutorials/vehicle_app_development/integration_tests/</link>
      <pubDate>Mon, 09 May 2022 13:46:21 +0530</pubDate>
      <guid>/velocitas/docs/tutorials/vehicle_app_development/integration_tests/</guid>
      <description>To be sure that a newly created Vehicle App will run together with the KUKSA Databroker and potentially other dependant Vehicle Services or Vehicle Apps, it&amp;rsquo;s essential to write integration tests along with developing the app.&#xA;To execute an integration test, the dependant components need to be running and be accessible from the test runner. This guide will describe how integration tests can be written and integrated in the CI pipeline so that they are executed automatically when building the application.</description>
    </item>
  </channel>
</rss>
