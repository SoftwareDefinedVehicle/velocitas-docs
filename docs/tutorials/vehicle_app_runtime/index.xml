<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vehicle App Runtime on Velocitas</title>
    <link>/velocitas/docs/tutorials/vehicle_app_runtime/</link>
    <description>Recent content in Vehicle App Runtime on Velocitas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 13 Feb 2025 16:54:39 +0100</lastBuildDate>
    <atom:link href="/velocitas/docs/tutorials/vehicle_app_runtime/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Local Runtime</title>
      <link>/velocitas/docs/tutorials/vehicle_app_runtime/local_runtime/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      <guid>/velocitas/docs/tutorials/vehicle_app_runtime/local_runtime/</guid>
      <description>Using tasks in Visual Studio Code Overview: If you are developing in Visual Studio Code, the runtime components (like KUKSA Databroker or Vehicle Services) are available for local execution coming from our devenv-runtimes package and are accessible as Tasks, a feature of the Visual Studio Code. Additional information on tasks can be found here .&#xA;Start local runtime: To start local runtime, a task called Local Runtime - Up is available.</description>
    </item>
    <item>
      <title>Kanto Runtime</title>
      <link>/velocitas/docs/tutorials/vehicle_app_runtime/kanto_runtime/</link>
      <pubDate>Mon, 09 May 2022 13:43:25 +0530</pubDate>
      <guid>/velocitas/docs/tutorials/vehicle_app_runtime/kanto_runtime/</guid>
      <description>Besides starting the vehicle runtime components locally , another way is to deploy them as containers using Kanto . To start the runtime, we provide VS Code Tasks, a feature of Visual Studio Code. Additional information on tasks can be found here .&#xA;Quick Start: Each step has a task that is defined in /.vscode/tasks.json:&#xA;Core tasks (dependent on each other in the given order):&#xA;Kanto - Runtime Up: Starts up the Kanto runtime and deploys the runtime components.</description>
    </item>
  </channel>
</rss>
